{"version":3,"sources":["components/OptionsItem/OptionsItem.module.scss","components/QuestionsList/QuestionsList.module.scss","components/Progress/Progress.module.scss","components/Header/Header.module.scss","containers/Quiz/Quiz.module.scss","components/QuestionRadio/QuestionRadio.module.scss","hoc/Layout/Layout.module.css","components/OptionsItem/OptionsItem.js","components/OptionsList/OptionsList.js","components/Question/Question.js","components/QuestionRadio/QuestionRadio.js","components/QuestionsList/QuestionsList.js","questionList/questionList.js","components/Progress/Progress.js","components/Header/Header.js","containers/Quiz/Quiz.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","checkmark","checkmarkCheckbox","text","btn","btn--prev","btnContainer","form","progressWrapper","title","progress","progressActive","progressDesc","current","currentText","currentTitle","header","help","quizWrapper","inline","radioBlock","OptionsItem","props","type","react_default","a","createElement","className","classes","value","onChange","handleRadioChange","name","checked","required","OptionsList","optionsList","map","option","index","components_OptionsItem_OptionsItem","key","selected","questionIndex","Question","components_OptionsList_OptionsList","QuestionRadio","questionDescr","designType","QuestionsList","isDisabled","disabled","radioBlocks","questionList","item","push","requiredQuestion","questionOption","reduce","sum","currentItem","length","every","Questions","components_Question_Question","question","nextQuestion","nextQuestionHandler","prevQuestion","prevQuestionHandler","checkboxChange","handleCheckboxChange","components_QuestionRadio_QuestionRadio","questions","questionNumber","join","onClick","totalQuestions","quizQuestions","questionsTitle","id","Progress","percent","currnetProcent","Math","round","style","width","build_default","start","end","Header","components_Progress_Progress","Quiz","state","QuestionList","QuestionTitle","ActiveQuestion","buttonNextActive","prevState","_this","setState","Object","toConsumableArray","createMarkup","dangerouslySetInnerHTML","__html","this","quiz","components_Header_Header","components_QuestionsList_QuestionsList","Component","Layout","containers_Quiz_Quiz","App","hoc_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e33ab9c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OptionsItem_container__3p7YW\",\"checkmark\":\"OptionsItem_checkmark__2ild5\",\"checkmarkCheckbox\":\"OptionsItem_checkmarkCheckbox__3HSAy\",\"text\":\"OptionsItem_text__1WrIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"QuestionsList_btn__2UVGg\",\"btn--prev\":\"QuestionsList_btn--prev__31Trz\",\"btnContainer\":\"QuestionsList_btnContainer__3tbGW\",\"form\":\"QuestionsList_form__e3_CB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressWrapper\":\"Progress_progressWrapper__hS9Xu\",\"title\":\"Progress_title__lugFg\",\"progress\":\"Progress_progress__3DehA\",\"progressActive\":\"Progress_progressActive__3sJTk\",\"progressDesc\":\"Progress_progressDesc__S-UDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__xJxCY\",\"current\":\"Header_current__Ge16r\",\"currentText\":\"Header_currentText__3_UeE\",\"currentTitle\":\"Header_currentTitle__1PAx9\",\"header\":\"Header_header__1n6Zn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Quiz_title__VTzAT\",\"help\":\"Quiz_help__1QK_e\",\"quizWrapper\":\"Quiz_quizWrapper__3eJo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"QuestionRadio_title__kX1vl\",\"inline\":\"QuestionRadio_inline__FcjvQ\",\"radioBlock\":\"QuestionRadio_radioBlock__hCnwA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__10m15\"};","import React from 'react';\r\n\r\nimport classes from './OptionsItem.module.scss';\r\n\r\nconst OptionsItem = (props) => {\r\n    return (\r\n        (props.type == 'text') ?\r\n            <div>\r\n                <label className={classes.container}>\r\n                    <input value='' type='checkbox'  onChange={props.handleRadioChange}/>\r\n                    <span className={classes.text} >{props.text}</span>\r\n                    <span className={classes.checkmarkCheckbox}></span>\r\n                        <input type=\"text\"/>\r\n                </label>\r\n\r\n            </div>\r\n            :\r\n            <label className={classes.container}>\r\n                <input value={props.text} type={props.type} onChange={props.handleRadioChange} name={props.name} checked ={props.checked} required={true}/>\r\n                <span className={classes.text}>{props.text}</span>\r\n                <span className={props.type === 'radio' ? classes.checkmark : classes.checkmarkCheckbox}></span>\r\n             </label>\r\n    )\r\n};\r\n\r\nexport default OptionsItem;\r\n","import React from 'react';\r\nimport OptionsItem from '../OptionsItem/OptionsItem'\r\n\r\nconst OptionsList = (props) => {\r\n    return (\r\n        props.optionsList.map((option,index) => (\r\n            option.type === 'radio' ?\r\n                <OptionsItem  text={option.text}\r\n                              key={index}\r\n                              checked={ option.text === props.selected}\r\n                              type={option.type}\r\n                              name={option.name} handleRadioChange={() => props.handleRadioChange(props.questionIndex, option.text)} />\r\n            :\r\n                <OptionsItem  text={option.text}\r\n                              key={index}\r\n                              checked={option.checked}\r\n                              type={option.type} name={option.name}\r\n                              handleRadioChange={() => props.handleRadioChange(props.questionIndex, index)} />\r\n        ))\r\n    )\r\n};\r\n\r\nexport default OptionsList;\r\n","import React from 'react';\r\n\r\nimport OptionsList from '../OptionsList/OptionsList'\r\n\r\nconst Question = (props) => {\r\n    return (\r\n        <div className={'QuestionCheckbox'}>\r\n            <OptionsList optionsList={props.optionsList} questionIndex={props.questionIndex} handleRadioChange={props.handleRadioChange}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\n\r\nimport OptionsList from '../OptionsList/OptionsList'\r\nimport classes from './QuestionRadio.module.scss'\r\n\r\nconst QuestionRadio = (props) => {\r\n    return (\r\n        <div className={classes.radioBlock}>\r\n            <div className={classes.title}>{props.questionDescr}</div>\r\n            <div className={classes[props.designType]}>\r\n                <OptionsList optionsList={props.optionsList} questionIndex={props.questionIndex} handleRadioChange={props.handleRadioChange} index={props.index} selected={props.selected}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuestionRadio;\r\n","import React from 'react';\r\nimport Question from '../Question/Question';\r\nimport QuestionRadio from '../QuestionRadio/QuestionRadio';\r\nimport classes from './QuestionsList.module.scss'\r\n\r\nconst QuestionsList = (props) => {\r\n    let isDisabled = function () {\r\n        let disabled;\r\n        let radioBlocks = []\r\n        props.questionList.map( (item) => {\r\n            if (item.type === 'radioBlock') {\r\n                radioBlocks.push(item.selected != null)\r\n            } else  {\r\n                let requiredQuestion = item.requiredQuestion;\r\n                disabled = (item.questionOption.reduce((sum, currentItem) => {\r\n                    return currentItem.checked === true ? sum + 1 : sum;\r\n                },0) >= 3) ? false : true\r\n            }\r\n        });\r\n        if (radioBlocks.length > 0) {\r\n            disabled = !radioBlocks.every((item) => (item == true))\r\n        }\r\n        return disabled;\r\n    }\r\n    const Questions = props.questionList.map((option,index) => (\r\n        option.type == 'checkboxBlock' ?\r\n        <Question\r\n            title={option.question}\r\n            nextQuestion={option.nextQuestionHandler} prevQuestion={option.prevQuestionHandler}\r\n            optionsList={option.questionOption}\r\n            checkboxChange={props.checkboxChange}\r\n            handleRadioChange={props.handleCheckboxChange}\r\n            questionIndex={index}\r\n            key={index}\r\n        /> :  <QuestionRadio\r\n                title={option.question}\r\n                nextQuestion={option.nextQuestionHandler} prevQuestion={option.prevQuestionHandler}\r\n                optionsList={option.questionOption}\r\n                checkboxChange={props.checkboxChange}\r\n                questionIndex={index}\r\n                handleRadioChange={props.handleRadioChange}\r\n                selected={option.selected}\r\n                questionDescr={option.questionDescr}\r\n                designType={option.designType}\r\n                key={index}\r\n            />\r\n\r\n    ))\r\n    return (\r\n        <form className={classes.form}>\r\n            <div className={classes.questions}>{Questions}</div>\r\n            <div className={classes.btnContainer}>\r\n                {props.questionNumber !== 0 ? <button className={[classes.btn, classes[\"btn--prev\"]].join(' ')} onClick={props.prevQuestion}  > <span>Предыдущий шаг</span></button> : null}\r\n                {props.totalQuestions === props.questionNumber ? <button className={classes.btn} onClick={props.nextQuestion} disabled={isDisabled()}><span>Завершить опрос</span></button> : <button className={classes.btn} onClick={props.nextQuestion} disabled={isDisabled()}><span>Следующий шаг</span></button>}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default QuestionsList;\r\n","var quizQuestions = [\r\n     {   questionsTitle: 'Какого Вы пола?',\r\n         help: [],\r\n         questions: [\r\n             {   questionDescr: '',\r\n                 id: 1,\r\n                 type: 'radioBlock',\r\n                 questionOption: [\r\n                     {name:'gender', text: 'Мужчина', type: 'radio', },\r\n                     {name:'gender', text: 'Женщина', type: 'radio', },\r\n                     {name:'gender', text: 'Боевой разведывательно-ударный вертолёт Ка-52.', type: 'radio', },\r\n                 ],\r\n                 selected: null,\r\n             }\r\n         ]\r\n     },\r\n    {   questionsTitle: 'Какие основные проблемы в сфере жкх?',\r\n        help: ['- Выберите <span>3</span>  варианта'],\r\n        questions: [\r\n            {   questionDescr: '',\r\n                id: 1,\r\n                type: 'checkboxBlock',\r\n                questionOption: [\r\n                    {name:'gender', text: 'Высокие тарифы ЖКХ', type: 'checkbox', checked: false},\r\n                    {name:'gender', text: 'Низкое качество уборки подъездов', type: 'checkbox', checked: false},\r\n                    {name:'gender', text: 'Низкое качество уборки дворов, в том числе уборка снега.', type: 'checkbox', checked: false},\r\n                    {name:'gender', text: 'Неудовлетворительное благоуствройство дворов.', type: 'checkbox', checked: false},\r\n                    {name:'gender', text: 'Другое', type: 'text', checked: false},\r\n                ],\r\n                requiredQuestion: 3,\r\n            },\r\n        ]\r\n    },\r\n    {   questionsTitle: 'Насколько вы согласны с каждым высказыванием по 5-ти балльной шкале.',\r\n        help: ['<span>5</span> баллов - абсолютно согласен.', '<span>1</span> балл - абсолютно не согласен'],\r\n        questions: [\r\n            {   questionDescr: 'Выборы - это хороший способ простым людям повлиять на жизнь района, города, республики.',\r\n                id: 1,\r\n                type: 'radioBlock',\r\n                questionOption: [\r\n                    {name:'1', text: '1', type: 'radio'},\r\n                    {name:'1', text: '2', type: 'radio'},\r\n                    {name:'1', text: '3', type: 'radio'},\r\n                    {name:'1', text: '4', type: 'radio'},\r\n                    {name:'1', text: '5', type: 'radio'},\r\n                ],\r\n                selected: null,\r\n                designType: 'inline'\r\n            },\r\n            {\r\n                questionDescr: 'Я всегда хожу на выборы не зависимо от их масштаба и значимости.',\r\n                id: 2,\r\n                type: 'radioBlock',\r\n                questionOption: [\r\n                    {name:'2', text: '1', type: 'radio'},\r\n                    {name:'2', text: '2', type: 'radio'},\r\n                    {name:'2', text: '3', type: 'radio'},\r\n                    {name:'2', text: '4', type: 'radio'},\r\n                    {name:'2', text: '5', type: 'radio'},\r\n                ],\r\n                selected: null,\r\n                designType: 'inline'\r\n            },\r\n            {\r\n                questionDescr: 'Я хочу, чтобы моё мнение тоже учитывалось на выборах.',\r\n                id: 3,\r\n                type: 'radioBlock',\r\n                questionOption: [\r\n                    {name:'3', text: '1', type: 'radio'},\r\n                    {name:'3', text: '2', type: 'radio'},\r\n                    {name:'3', text: '3', type: 'radio'},\r\n                    {name:'3', text: '4', type: 'radio'},\r\n                    {name:'3', text: '5', type: 'radio'},\r\n                ],\r\n                selected: null,\r\n                designType: 'inline'\r\n            },\r\n            {\r\n                questionDescr: 'Мне истересно кто победит на выборах.',\r\n                id: 4,\r\n                type: 'radioBlock',\r\n                questionOption: [\r\n                    {name:'4', text: '1', type: 'radio'},\r\n                    {name:'4', text: '2', type: 'radio'},\r\n                    {name:'4', text: '3', type: 'radio'},\r\n                    {name:'4', text: '4', type: 'radio'},\r\n                    {name:'4', text: '5', type: 'radio'},\r\n                ],\r\n                selected: null,\r\n                designType: 'inline'\r\n            },\r\n            {\r\n                questionDescr: 'В кругу друзей и близких я обсуждаю песледние новости района, города, республики.',\r\n                id: 4,\r\n                type: 'radioBlock',\r\n                questionOption: [\r\n                    {name:'5', text: '1', type: 'radio'},\r\n                    {name:'5', text: '2', type: 'radio'},\r\n                    {name:'5', text: '3', type: 'radio'},\r\n                    {name:'5', text: '4', type: 'radio'},\r\n                    {name:'5', text: '5', type: 'radio'},\r\n                ],\r\n                selected: null,\r\n                designType: 'inline'\r\n            },\r\n        ]\r\n    }\r\n]\r\n\r\nexport default quizQuestions;","import React from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nimport classes from './Progress.module.scss'\r\n\r\nconst Progress = (props) => {\r\n    let percentOld = () => {\r\n        if (props.questionNumber === 0) {\r\n            return 33\r\n        }\r\n        let currnetProcent = Math.round(100 / ((props.totalQuestions + 1)/(props.questionNumber -1 )));\r\n        return currnetProcent;\r\n    };\r\n    let percent = () => {\r\n        let currnetProcent = Math.round(100 / ((props.totalQuestions + 1)/props.questionNumber));\r\n        let percentOld = currnetProcent;\r\n        return currnetProcent;\r\n    }\r\n    return (\r\n        <div className={classes.progressWrapper}>\r\n            <span className={classes.title}>Прогресс:</span>\r\n            <div className={classes.progress}>\r\n                <div className={classes.progressActive} style={{width: percent() + '%'}}>\r\n                    <span className={classes.progressDesc}>\r\n                        <CountUp start={percentOld()} end={percent()} />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Progress;\r\n","import React from 'react';\r\n\r\nimport Progress from '../Progress/Progress'\r\nimport classes from './Header.module.scss'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={classes.header}>\r\n            <h1 className={classes.title}>Пройди опрос и сделай Казань лучше!</h1>\r\n            <div className={classes.current}>\r\n                <span className={classes.currentTitle}>Вопрос:</span>\r\n                <span className={classes.currentText}>{props.questionNumber + 1} / {props.totalQuestions + 1}</span>\r\n            </div>\r\n            <Progress questionNumber={props.questionNumber} totalQuestions={props.totalQuestions}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport QuestionList from '../../components/QuestionsList/QuestionsList'\r\nimport quizQuestions from '../../questionList/questionList'\r\nimport Header from '../../components/Header/Header'\r\nimport classes from './Quiz.module.scss'\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        QuestionList: [],\r\n        QuestionTitle: ' ',\r\n        totalQuestions: '',\r\n        help: null,\r\n        ActiveQuestion: 0,\r\n        buttonNextActive: \"false\"\r\n    };\r\n    componentWillMount() {\r\n        this.setState({\r\n            QuestionList: quizQuestions[this.state.ActiveQuestion].questions,\r\n            QuestionTitle: quizQuestions[this.state.ActiveQuestion].questionsTitle,\r\n            help: quizQuestions[this.state.ActiveQuestion].help,\r\n            totalQuestions: quizQuestions.length - 1\r\n        });\r\n    }\r\n    nextQuestionHandler = (prevState) => {\r\n        const ActiveQuestion = this.state.ActiveQuestion + 1;\r\n        this.setState({\r\n            QuestionList: quizQuestions[ActiveQuestion].questions,\r\n            QuestionTitle: quizQuestions[ActiveQuestion].questionsTitle,\r\n            help: quizQuestions[ActiveQuestion].help,\r\n            ActiveQuestion: ActiveQuestion\r\n        });\r\n    }\r\n    prevQuestionHandler = () => {\r\n        if (this.state.ActiveQuestion > 0) {\r\n            const ActiveQuestion = this.state.ActiveQuestion - 1;\r\n            this.setState({\r\n                QuestionList: quizQuestions[ActiveQuestion].questions,\r\n                QuestionTitle: quizQuestions[ActiveQuestion].questionsTitle,\r\n                help: quizQuestions[ActiveQuestion].help,\r\n                ActiveQuestion: ActiveQuestion\r\n            });\r\n        }\r\n    }\r\n    handleCheckboxChange = (questionIndex, index) => {\r\n        let QuestionList = [...this.state.QuestionList];\r\n        let test = QuestionList[questionIndex].questionOption[index].checked;\r\n        QuestionList[questionIndex].questionOption[index].checked = !QuestionList[questionIndex].questionOption[index].checked;\r\n        this.setState(prevState => ({\r\n            QuestionList\r\n        }));\r\n    };\r\n    handleRadioChange = (questionIndex, value) => {\r\n        let QuestionList = [...this.state.QuestionList];\r\n        QuestionList[questionIndex].selected = value;\r\n        this.setState(prevState => ({\r\n            QuestionList\r\n        }));\r\n    };\r\n    createMarkup = () => {\r\n        return (\r\n            this.state.help.map((help, index) => (\r\n                <div key={index} dangerouslySetInnerHTML={{__html: help }}>\r\n\r\n                </div>\r\n            ))\r\n        )\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={classes.quiz}>\r\n                <Header\r\n                    questionNumber={this.state.ActiveQuestion}\r\n                    totalQuestions={this.state.totalQuestions}\r\n                    />\r\n                <div className={classes.quizWrapper}>\r\n                    <h1 className={classes.title}>{this.state.QuestionTitle}</h1>\r\n                    <div className={classes.help}>\r\n                        { this.state.help != 0 ? this.createMarkup() : null}\r\n                    </div>\r\n\r\n                    <QuestionList questionList={this.state.QuestionList}\r\n                                  nextQuestion={this.nextQuestionHandler} prevQuestion={this.prevQuestionHandler}\r\n                                  requiredQuestion={this.state.requiredQuestion}\r\n                                  questionNumber={this.state.ActiveQuestion}\r\n                                  handleRadioChange={this.handleRadioChange}\r\n                                  handleCheckboxChange={this.handleCheckboxChange}\r\n                                  totalQuestions={this.state.totalQuestions}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Quiz from '../../containers/Quiz/Quiz'\r\nimport classes from './Layout.module.css'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n    }\r\n    render () {\r\n        return (\r\n            <div className={classes.container}>\r\n                <Quiz />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Quiz from './containers/Quiz/Quiz';\r\nimport Layout from './hoc/Layout/Layout';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div >\r\n          <Layout>\r\n            <Quiz/>\r\n          </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}